spring:
  application:
    name: data-api
  security:
    oauth2:
      resourceserver:
        jwt:
#          issuer-uri: http://localhost:9080/auth/realms/myrealm
          # jwk-set-uri 可以省略，Spring 会根据 issuer-uri 自动推导
           jwk-set-uri: http://localhost:9080/realms/myrealm/protocol/openid-connect/certs
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: ac123456
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
kong:
  admin:
    url: http://localhost:8001/


keycloak:
  realm: myrealm
  ssl-required: external
  resource: myclient
  credentials:
    secret: Bhg2XGvNfxUrg1tzhrIuICSGqFOCy4cB
  user-resource-role-mappings: true
  public-client: false
  bearer-only: true
  security-constraints:
    - authRoles: ["USER", "ADMIN"]
      securityCollections:
        - name: Protected API
          patterns: ["/*"]   # 保护所有路径
#  ssl-required: ALL        # 强制启用 HTTPS
  use-resource-role-mappings: true # 全局登出（点点登出）
  principal-attribute: preferred_username
  enable-basic-auth: false
  autodetect-bearer-only: true
  urls:
    auth: http://localhost:9080
    token: http://localhost:9080/realms/myrealm/protocol/openid-connect/token
  user-info: owiseman_user_17
  is-email-verified: false

apns:
  key-path: classpath:AuthKey_TCC2B6KMUH.p8
  team-id: Y26RXXZ6VX
  key-id: TCC2B6KMUH
  bundle-id: com.owiseman.app
  production: false